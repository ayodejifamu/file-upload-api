// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using fileUploadApi.Infrastructure.Data;

#nullable disable

namespace fileUploadApi.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("fileUploadApi.SharedKernel.Entities.fileTypeControl", b =>
                {
                    b.Property<int>("baseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("baseId"), 1L, 1);

                    b.Property<string>("fileType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fileType");

                    b.Property<string>("fileTypeAcceptableExtensions")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fileTypeAcceptableExtensions");

                    b.Property<string>("maxFileSizeToLetSaveInDb")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("maxFileSizeToLetSaveInDb");

                    b.HasKey("baseId")
                        .HasName("baseId");

                    b.ToTable("fileTypeInfo");
                });

            modelBuilder.Entity("fileUploadApi.SharedKernel.Entities.userIdfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("fileDataBS64")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fileDataBS641");

                    b.Property<string>("filePath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fileDataBS64");

                    b.Property<string>("fileTypeExtension")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fileTypeExtension");

                    b.Property<int>("fileTypeId")
                        .HasColumnType("int")
                        .HasColumnName("fileTypeId");

                    b.Property<string>("fileUniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fileUniqueId");

                    b.Property<string>("filename")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("filename");

                    b.Property<string>("updatedFileName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updatedFileName");

                    b.Property<string>("userUniqueId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("userUniqueId");

                    b.HasKey("Id");

                    b.ToTable("fileInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
